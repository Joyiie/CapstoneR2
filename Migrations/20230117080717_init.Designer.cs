// <auto-generated />
using System;
using CapstoneR2.Infrastructure.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CapstoneR2.Migrations
{
    [DbContext(typeof(DefaultDBContext))]
    [Migration("20230117080717_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CapstoneR2.Infrastructure.Domain.Models.Appointment", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("PatientID")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ID");

                    b.HasIndex("PatientID");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            ID = new Guid("c7d431a6-579b-4841-8629-2bbcb79a5e15"),
                            Description = " Masakit daw mata",
                            EndTime = new DateTime(2023, 2, 12, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientID = new Guid("8664a4bd-0ec6-4aaa-83e6-7d2bd0315b5a"),
                            StartTime = new DateTime(2023, 2, 12, 11, 30, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("CapstoneR2.Infrastructure.Domain.Models.ConsultationRecord", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AppointmentID")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("PatientID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Symptoms")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("AppointmentID");

                    b.HasIndex("PatientID");

                    b.ToTable("ConsultationRecords");

                    b.HasData(
                        new
                        {
                            ID = new Guid("0c096359-c9ef-4f37-9c37-47b7bf247746"),
                            AppointmentID = new Guid("c7d431a6-579b-4841-8629-2bbcb79a5e15"),
                            DateCreated = new DateTime(2022, 1, 7, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(2022, 1, 7, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            PatientID = new Guid("8664a4bd-0ec6-4aaa-83e6-7d2bd0315b5a"),
                            Symptoms = "test lang 123"
                        });
                });

            modelBuilder.Entity("CapstoneR2.Infrastructure.Domain.Models.Finding", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ConsultationRecordID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Tags")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("ConsultationRecordID");

                    b.ToTable("Findings");

                    b.HasData(
                        new
                        {
                            ID = new Guid("baa0fed5-0f51-4258-81c2-397a37b957a4"),
                            ConsultationRecordID = new Guid("0c096359-c9ef-4f37-9c37-47b7bf247746"),
                            Description = "sore eyes",
                            Tags = "123"
                        });
                });

            modelBuilder.Entity("CapstoneR2.Infrastructure.Domain.Models.Patient", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ContactNo")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("MiddleName")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            ID = new Guid("8664a4bd-0ec6-4aaa-83e6-7d2bd0315b5a"),
                            Address = "Dinalupihan, Orani, Bataan",
                            BirthDate = new DateTime(2023, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContactNo = "09286390110",
                            FirstName = "Raniel",
                            Gender = 1,
                            LastName = "Morales",
                            MiddleName = "Adan"
                        });
                });

            modelBuilder.Entity("CapstoneR2.Infrastructure.Domain.Models.Prescription", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ConsultationRecordID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Tags")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("ConsultationRecordID");

                    b.ToTable("Prescriptions");

                    b.HasData(
                        new
                        {
                            ID = new Guid("143a0648-4e27-485f-ae6c-e91c2dd5fc6c"),
                            ConsultationRecordID = new Guid("0c096359-c9ef-4f37-9c37-47b7bf247746"),
                            Description = "biogesic",
                            Tags = "123"
                        });
                });

            modelBuilder.Entity("CapstoneR2.Infrastructure.Domain.Models.Role", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Abbreviation")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            ID = new Guid("2afa881f-e519-4e67-a841-e4a2630e8a2a"),
                            Abbreviation = "Pt",
                            Description = "One who receives medical treatment",
                            Name = "patient"
                        },
                        new
                        {
                            ID = new Guid("54f00f70-72b8-4d34-a953-83321ff6b101"),
                            Abbreviation = "Adm",
                            Description = "One who manages the system",
                            Name = "admin"
                        });
                });

            modelBuilder.Entity("CapstoneR2.Infrastructure.Domain.Models.User", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ContactNo")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("MiddleName")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("RoleID")
                        .HasColumnType("char(36)");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = new Guid("7e5e4f74-9902-43da-9974-4b2a08814398"),
                            Address = "Dinalupihan, Orani, Bataan",
                            BirthDate = new DateTime(2001, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContactNo = "09098700909",
                            Email = "renieldavid@yahoo.com",
                            FirstName = "Reniel",
                            Gender = 1,
                            LastName = "David",
                            MiddleName = "Adan",
                            RoleID = new Guid("2afa881f-e519-4e67-a841-e4a2630e8a2a")
                        },
                        new
                        {
                            ID = new Guid("00acfb7f-6c90-459a-b53f-bf73ddac85b4"),
                            Address = "Dinalupihan, Orani , Bataan",
                            BirthDate = new DateTime(2002, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContactNo = "09098900909",
                            Email = "Janedavid@yahoo.com",
                            FirstName = "Jane",
                            Gender = 0,
                            LastName = "David",
                            MiddleName = "Adan",
                            RoleID = new Guid("54f00f70-72b8-4d34-a953-83321ff6b101")
                        });
                });

            modelBuilder.Entity("CapstoneR2.Infrastructure.Domain.Models.UserLogin", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Key")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UserID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("UserLogins");

                    b.HasData(
                        new
                        {
                            ID = new Guid("56e91c7c-743f-4f9e-af5d-a318100cae0b"),
                            Key = "Password",
                            Type = "General",
                            UserID = new Guid("00acfb7f-6c90-459a-b53f-bf73ddac85b4"),
                            Value = "$2a$11$wdzdnI/4ghLhG6vZuHtqwOFV71s/xm6sgRj20k9CAjvmdZPWLDOT."
                        },
                        new
                        {
                            ID = new Guid("724291f5-4764-4c5f-90fe-186e9b9d763f"),
                            Key = "IsActive",
                            Type = "General",
                            UserID = new Guid("00acfb7f-6c90-459a-b53f-bf73ddac85b4"),
                            Value = "true"
                        },
                        new
                        {
                            ID = new Guid("860d4a1b-8826-409c-8c5b-43ef1dc392eb"),
                            Key = "LoginRetries",
                            Type = "General",
                            UserID = new Guid("00acfb7f-6c90-459a-b53f-bf73ddac85b4"),
                            Value = "0"
                        },
                        new
                        {
                            ID = new Guid("71e9c444-1b61-4397-812e-44821b8c60fa"),
                            Key = "Password",
                            Type = "General",
                            UserID = new Guid("7e5e4f74-9902-43da-9974-4b2a08814398"),
                            Value = "$2a$11$d5cYbvJIEODFz8Fxe8eBNu.sknQKUXnlozK1bMFTDQUNcG91N8qwq"
                        },
                        new
                        {
                            ID = new Guid("34dfd354-5f0d-41fd-97c2-7cba64d8fa43"),
                            Key = "IsActive",
                            Type = "General",
                            UserID = new Guid("7e5e4f74-9902-43da-9974-4b2a08814398"),
                            Value = "true"
                        },
                        new
                        {
                            ID = new Guid("fa7d603d-e6d3-4fe1-a427-546ad57a2e26"),
                            Key = "LoginRetries",
                            Type = "General",
                            UserID = new Guid("7e5e4f74-9902-43da-9974-4b2a08814398"),
                            Value = "0"
                        });
                });

            modelBuilder.Entity("CapstoneR2.Infrastructure.Domain.Models.UserRole", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("RoleID")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserID")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("RoleID");

                    b.HasIndex("UserID");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7da68b9f-4cb1-4e91-81aa-c3cd05d6d250"),
                            RoleID = new Guid("2afa881f-e519-4e67-a841-e4a2630e8a2a"),
                            UserID = new Guid("7e5e4f74-9902-43da-9974-4b2a08814398")
                        },
                        new
                        {
                            Id = new Guid("b8de8371-d5e6-4a34-9e09-a6f733d07466"),
                            RoleID = new Guid("54f00f70-72b8-4d34-a953-83321ff6b101"),
                            UserID = new Guid("00acfb7f-6c90-459a-b53f-bf73ddac85b4")
                        });
                });

            modelBuilder.Entity("CapstoneR2.Infrastructure.Domain.Models.Appointment", b =>
                {
                    b.HasOne("CapstoneR2.Infrastructure.Domain.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientID");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("CapstoneR2.Infrastructure.Domain.Models.ConsultationRecord", b =>
                {
                    b.HasOne("CapstoneR2.Infrastructure.Domain.Models.Appointment", "Appointment")
                        .WithMany()
                        .HasForeignKey("AppointmentID");

                    b.HasOne("CapstoneR2.Infrastructure.Domain.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientID");

                    b.Navigation("Appointment");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("CapstoneR2.Infrastructure.Domain.Models.Finding", b =>
                {
                    b.HasOne("CapstoneR2.Infrastructure.Domain.Models.ConsultationRecord", "Consultation")
                        .WithMany()
                        .HasForeignKey("ConsultationRecordID");

                    b.Navigation("Consultation");
                });

            modelBuilder.Entity("CapstoneR2.Infrastructure.Domain.Models.Prescription", b =>
                {
                    b.HasOne("CapstoneR2.Infrastructure.Domain.Models.ConsultationRecord", "Consultation")
                        .WithMany()
                        .HasForeignKey("ConsultationRecordID");

                    b.Navigation("Consultation");
                });

            modelBuilder.Entity("CapstoneR2.Infrastructure.Domain.Models.User", b =>
                {
                    b.HasOne("CapstoneR2.Infrastructure.Domain.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CapstoneR2.Infrastructure.Domain.Models.UserRole", b =>
                {
                    b.HasOne("CapstoneR2.Infrastructure.Domain.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID");

                    b.HasOne("CapstoneR2.Infrastructure.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Role");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
